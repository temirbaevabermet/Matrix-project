import java.util.Scanner;
import java.util.ArrayList;
import java.util.Random;
public class Main
{
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		Random random = new Random();
		System.out.print("Enter your name: ");
		String playerName = scanner.nextLine();
		playerGreeting(playerName);
		
		int[][] playingField = {{0,0,0,0,0,0,0},
		                        {0,0,0,0,0,0,0},
		                        {0,0,0,0,0,0,0},
		                        {0,0,0,0,0,0,0},
		                        {0,0,0,0,0,0,0},
		                        {0,0,0,0,0,0,0},
		                        {0,0,0,0,0,0,0}};
		
		int startOfRange=0;
		int endOfRange=6;
		int firstСoordinateThreeCellShip=playingField[0][0];
		int firstСoordinateThreeCellShipRow = startOfRange + (int)(Math.random() * (endOfRange - startOfRange + 1));
		int firstСoordinateThreeCellShipColumn = startOfRange + (int)(Math.random() * (endOfRange - startOfRange + 1));
		int a=firstСoordinateThreeCellShipRow;
		int b=firstСoordinateThreeCellShipColumn;
		
		for (int i=0; i<7; i++){
	        for(int j=0; j<7; j++){
	            playingField[firstСoordinateThreeCellShipRow][firstСoordinateThreeCellShipColumn]=5;
	            firstСoordinateThreeCellShip=playingField[firstСoordinateThreeCellShipRow][firstСoordinateThreeCellShipColumn];
	        }
	    }
	    int startOfRange1=1;
	    int endOfRange1=2;
	    int verticalOrHorizontal=startOfRange1 + (int)(Math.random() * (endOfRange1 - startOfRange1 + 1));
	    
	    int secondСoordinateThreeCellShipRow=0;
		int secondСoordinateThreeCellShipColumn=0;
	    if(verticalOrHorizontal==1){
	        if(b==6){
	            secondСoordinateThreeCellShipRow=firstСoordinateThreeCellShipRow;
	            secondСoordinateThreeCellShipColumn=firstСoordinateThreeCellShipColumn-1;
	        }
	        else{
	            secondСoordinateThreeCellShipRow=firstСoordinateThreeCellShipRow;
	            secondСoordinateThreeCellShipColumn=firstСoordinateThreeCellShipColumn+1;
	        }
	    }
	    if(verticalOrHorizontal==2){
	        if(a==6){
	            secondСoordinateThreeCellShipColumn=firstСoordinateThreeCellShipColumn;
	            secondСoordinateThreeCellShipRow=firstСoordinateThreeCellShipRow-1;
	        }
	        else{
	            secondСoordinateThreeCellShipColumn=firstСoordinateThreeCellShipColumn;
	            secondСoordinateThreeCellShipRow=firstСoordinateThreeCellShipRow+1;
	        }
	    }
	    int c=secondСoordinateThreeCellShipRow;
	    int d=secondСoordinateThreeCellShipColumn;
	    
	    int secondСoordinateThreeCellShip=playingField[0][0];
	    for (int i=0; i<7; i++){
	        for(int j=0; j<7; j++){
	            playingField[secondСoordinateThreeCellShipRow][secondСoordinateThreeCellShipColumn]=5;
	            secondСoordinateThreeCellShip=playingField[secondСoordinateThreeCellShipRow][secondСoordinateThreeCellShipColumn];
	        }
	    }
	    int thirdСoordinateThreeCellShipRow=0;
		int thirdСoordinateThreeCellShipColumn=0;
	    if(verticalOrHorizontal==1){
	        if(b==6){
	            thirdСoordinateThreeCellShipRow=firstСoordinateThreeCellShipRow;
	            thirdСoordinateThreeCellShipColumn=secondСoordinateThreeCellShipColumn-1;
	        }
	        else if(d==6){
	            thirdСoordinateThreeCellShipRow=firstСoordinateThreeCellShipRow;
	            thirdСoordinateThreeCellShipColumn=firstСoordinateThreeCellShipColumn-1;
	        }
	        else{
	            thirdСoordinateThreeCellShipRow=firstСoordinateThreeCellShipRow;
	            thirdСoordinateThreeCellShipColumn=secondСoordinateThreeCellShipColumn+1;
	        }
	    }
	    if(verticalOrHorizontal==2){
	        if(a==6){
	            thirdСoordinateThreeCellShipColumn=firstСoordinateThreeCellShipColumn;
	            thirdСoordinateThreeCellShipRow=secondСoordinateThreeCellShipRow-1;
	        }
	        else if(c==6){
	            thirdСoordinateThreeCellShipColumn=firstСoordinateThreeCellShipColumn;
	            thirdСoordinateThreeCellShipRow=firstСoordinateThreeCellShipRow-1;
	        }
	        else{
	            thirdСoordinateThreeCellShipColumn=firstСoordinateThreeCellShipColumn;
	            thirdСoordinateThreeCellShipRow=secondСoordinateThreeCellShipRow+1;
	        }
	    }
	    
	    
	    
	    int thirdСoordinateThreeCellShip=playingField[0][0];
	    for (int i=0; i<7; i++){
	        for(int j=0; j<7; j++){
	            playingField[thirdСoordinateThreeCellShipRow][thirdСoordinateThreeCellShipColumn]=5;
	            thirdСoordinateThreeCellShip=playingField[thirdСoordinateThreeCellShipRow][thirdСoordinateThreeCellShipColumn];
	        }
	    }
	    if(verticalOrHorizontal==1){
	        for (int i=-1; i<=1; i++){
	            for(int j=-1; j<=1; j++){
	                int firstRow=firstСoordinateThreeCellShipRow+i;
	                int firstColumn=firstСoordinateThreeCellShipColumn+j;
	                int secondRow=secondСoordinateThreeCellShipRow+i;
	                int secondColumn=secondСoordinateThreeCellShipColumn+j;
	                int thirdRow=thirdСoordinateThreeCellShipRow+i;
	                int thirdColumn=thirdСoordinateThreeCellShipColumn+j;
	                if(firstRow>=0 && firstRow<7 && firstColumn>=0 && firstColumn<7 && secondRow>=0 && secondRow<7 && secondColumn>=0 && secondColumn<7 && thirdRow>=0 && thirdRow<7 && thirdColumn>=0 && thirdColumn<7 && playingField[firstRow][firstColumn]!=5 && playingField[secondRow][secondColumn]!=5 && playingField[thirdRow][thirdColumn]!=5){
	                    playingField[firstRow][firstColumn]=1;
	                    playingField[secondRow][secondColumn]=1;
	                    playingField[thirdRow][thirdColumn]=1;
	                }
	                
	            }
	        }
	        for(int i=-1; i<=1; i++){
	            int firstColumn1 = firstСoordinateThreeCellShipColumn+i;
	            if(firstColumn1>=0 && firstColumn1<7 && playingField[firstСoordinateThreeCellShipRow][firstColumn1]!=5){
	                playingField[firstСoordinateThreeCellShipRow][firstColumn1]=1;
	                
	            }
	        }
	        for(int i=-1; i<=1; i++){
	            int secondColumn1 = secondСoordinateThreeCellShipColumn+i;
	            if(secondColumn1>=0 && secondColumn1<7 && playingField[secondСoordinateThreeCellShipRow][secondColumn1]!=5){
	                playingField[secondСoordinateThreeCellShipRow][secondColumn1]=1;
	            }
	        }
	        for(int i=-1; i<=1; i++){
	            int thirdColumn1 = thirdСoordinateThreeCellShipColumn+i;
	            if(thirdColumn1>=0 && thirdColumn1<7 && playingField[thirdСoordinateThreeCellShipRow][thirdColumn1]!=5){
	                playingField[thirdСoordinateThreeCellShipRow][thirdColumn1]=1;
	            }
	        }
	        
	        
	    }
	    if(verticalOrHorizontal==2){
	        for (int i=-1; i<=1; i++){
	            for(int j=-1; j<=1; j++){
	                int firstRow=firstСoordinateThreeCellShipRow+i;
	                int firstColumn=firstСoordinateThreeCellShipColumn+j;
	                int secondRow=secondСoordinateThreeCellShipRow+i;
	                int secondColumn=secondСoordinateThreeCellShipColumn+j;
	                int thirdRow=thirdСoordinateThreeCellShipRow+i;
	                int thirdColumn=thirdСoordinateThreeCellShipColumn+j;
	                if(firstRow>=0 && firstRow<7 && firstColumn>=0 && firstColumn<7 && secondRow>=0 && secondRow<7 && secondColumn>=0 && secondColumn<7 && thirdRow>=0 && thirdRow<7 && thirdColumn>=0 && thirdColumn<7 && playingField[firstRow][firstColumn]!=5 && playingField[secondRow][secondColumn]!=5 && playingField[thirdRow][thirdColumn]!=5){
	                    playingField[firstRow][firstColumn]=1;
	                    playingField[secondRow][secondColumn]=1;
	                    playingField[thirdRow][thirdColumn]=1;
	                }
	                
	            }
	        }
	        for(int i=-1; i<=1; i++){
	            int firstRow1 = firstСoordinateThreeCellShipRow+i;
	            if(firstRow1>=0 && firstRow1<7 && playingField[firstRow1][firstСoordinateThreeCellShipColumn]!=5){
	                playingField[firstRow1][firstСoordinateThreeCellShipColumn]=1;
	            }
	        }
	        for(int i=-1; i<=1; i++){
	            int secondRow1 = secondСoordinateThreeCellShipRow+i;
	            if(secondRow1>=0 && secondRow1<7 && playingField[secondRow1][secondСoordinateThreeCellShipColumn]!=5){
	                playingField[secondRow1][secondСoordinateThreeCellShipColumn]=1;
	            }
	        }
	        for(int i=-1; i<=1; i++){
	            int thirdRow1 = thirdСoordinateThreeCellShipRow+i;
	            if(thirdRow1>=0 && thirdRow1<7 && playingField[thirdRow1][thirdСoordinateThreeCellShipColumn]!=5){
	                playingField[thirdRow1][thirdСoordinateThreeCellShipColumn]=1;
	            }
	        }
	    }
	    int count=0;
	    while(count!=2){
	        ArrayList<Integer> array = new ArrayList<Integer>();
	        int verticalOrHorizontal1=startOfRange1 + (int)(Math.random() * (endOfRange1 - startOfRange1 + 1));
	        int v=0;
	        int z=0;
	        int u=0;
	        int g=0;
	        if(verticalOrHorizontal1==1){
	            for(int i=0; i<6; i++){
	                for(int j=0; j<6; j++){
	                    if(playingField[i][j]==0&&playingField[i][j+1]==0){
	                        int secondСoordinateTwoCellShipRow=i;
	                        array.add(secondСoordinateTwoCellShipRow);
	                    }
	                }
	            }
	            int q=0;
	            for(int i=0; i<array.size(); i++){
		             q++;
		        }
		        int secondСoordinateTwoCellShipRow=array.get(random.nextInt(q));
		        int secondСoordinateTwoCellShipColumn = 0;
		        for(int k =0; k<6; k++){
		            if(playingField[secondСoordinateTwoCellShipRow][k]==0&&playingField[secondСoordinateTwoCellShipRow][k+1]==0){
		                secondСoordinateTwoCellShipColumn = k;
		            }
		        }
		        playingField[secondСoordinateTwoCellShipRow][secondСoordinateTwoCellShipColumn]=5;
		        playingField[secondСoordinateTwoCellShipRow][secondСoordinateTwoCellShipColumn+1]=5;
		        v = secondСoordinateTwoCellShipRow;
		        z = secondСoordinateTwoCellShipColumn;
		        u = secondСoordinateTwoCellShipRow;
		        g = secondСoordinateTwoCellShipColumn+1;
	       }
	    
	        if(verticalOrHorizontal1==2){
	            for(int i=0; i<6; i++){
	                for(int j=0; j<6; j++){
	                    if(playingField[i][j]==0&&playingField[i+1][j]==0){
	                        int secondСoordinateTwoCellShipColumn = j;
	                        array.add(secondСoordinateTwoCellShipColumn);
	                    }
	                }
	            }
	        int q=0;
	        for(int i=0; i<array.size(); i++){
		         q++;
		    }
		    int secondСoordinateTwoCellShipColumn=array.get(random.nextInt(q));
		    int secondСoordinateTwoCellShipRow=0;
		    for(int x=0; x<6; x++){
		        if(playingField[x][secondСoordinateTwoCellShipColumn]==0&&playingField[x+1][secondСoordinateTwoCellShipColumn]==0){
		            secondСoordinateTwoCellShipRow=x;
		        }
		    }
		    playingField[secondСoordinateTwoCellShipRow][secondСoordinateTwoCellShipColumn]=5;
		    playingField[secondСoordinateTwoCellShipRow+1][secondСoordinateTwoCellShipColumn]=5;
		    v=secondСoordinateTwoCellShipRow;
		    z=secondСoordinateTwoCellShipColumn;
		    u=secondСoordinateTwoCellShipRow+1;
		    g=secondСoordinateTwoCellShipColumn;
	        }
	        if(verticalOrHorizontal1==1){
	            for (int i=-1; i<=1; i++){
	                for(int j=-1; j<=1; j++){
	                    int firstRow=v+i;
	                    int firstColumn=z+j;
	                    int secondRow=u+i;
	                    int secondColumn=g+j;
	                    if(firstRow>=0 && firstRow<7 && firstColumn>=0 && firstColumn<7 && secondRow>=0 && secondRow<7 && secondColumn>=0 && secondColumn<7  && playingField[firstRow][firstColumn]!=5 && playingField[secondRow][secondColumn]!=5){
	                        playingField[firstRow][firstColumn]=1;
	                        playingField[secondRow][secondColumn]=1;
	                    }
	                
	                }
	            }
	            for(int i=-1; i<=1; i++){
	                int firstColumn1 = z+i;
	                if(firstColumn1>=0 && firstColumn1<7 && playingField[v][firstColumn1]!=5){
	                playingField[v][firstColumn1]=1;
	                
	                }
	            }
	            for(int i=-1; i<=1; i++){
	                int secondColumn1 = g+i;
	                if(secondColumn1>=0 && secondColumn1<7 && playingField[u][secondColumn1]!=5){
	                playingField[u][secondColumn1]=1;
	                }
	            }
	        }
	 
	        if(verticalOrHorizontal1==2){
	            for (int i=-1; i<=1; i++){
	                for(int j=-1; j<=1; j++){
	                    int firstRow=v+i;
	                    int firstColumn=z+j;
	                    int secondRow=u+i;
	                    int secondColumn=g+j;
	                    if(firstRow>=0 && firstRow<7 && firstColumn>=0 && firstColumn<7 && secondRow>=0 && secondRow<7 && secondColumn>=0 && secondColumn<7 &&  playingField[firstRow][firstColumn]!=5 && playingField[secondRow][secondColumn]!=5 ){
	                    playingField[firstRow][firstColumn]=1;
	                    playingField[secondRow][secondColumn]=1;
	                    }
	                
	                }
	            }
	            for(int i=-1; i<=1; i++){
	                int firstRow1 = v+i;
	                if(firstRow1>=0 && firstRow1<7 && playingField[firstRow1][z]!=5){
	                    playingField[firstRow1][z]=1;
	                }
	            }
	            for(int i=-1; i<=1; i++){
	                int secondRow1 = u+i;
	                if(secondRow1>=0 && secondRow1<7 && playingField[secondRow1][g]!=5){
	                    playingField[secondRow1][g]=1;
	                }
	            }
	            
	        }
	        array.clear();
	        count++;
	    }
	    int count1=0;
	    while(count1!=4){
	        ArrayList<Integer> array1 = new ArrayList<Integer>();
	        int n=0;
	        int m=0;
	        for(int i=0; i<6; i++){
	            for(int j=0; j<6; j++){
	                if(playingField[i][j]==0){
	                    int oneCellShipRow=i;
	                    array1.add(oneCellShipRow);
	                }
	            }
	        }
	        int q=0;
	        for(int i=0; i<array1.size(); i++){
		        q++;
		    }
		    int oneCellShipRow=array1.get(random.nextInt(q));
            int oneCellShipColumn = 0;
            for(int k =0; k<6; k++){
		        if(playingField[oneCellShipRow][k]==0){
		            oneCellShipColumn = k;
		        }
		    }
		    playingField[oneCellShipRow][oneCellShipColumn]=5;
		    m=oneCellShipRow;
		    n=oneCellShipColumn;
	        for (int i=-1; i<=1; i++){
	            for(int j=-1; j<=1; j++){
	                int firstRow=m+i;
	                int firstColumn=n+j;
	                if(firstRow>=0 && firstRow<7 && firstColumn>=0 && firstColumn<7 && playingField[firstRow][firstColumn]!=5 ){
	                    playingField[firstRow][firstColumn]=1;
	                }
	                
	            }
	        }
	        count1++;
	        array1.clear();
	    }
	    
	  
	    for(int i=0; i<playingField.length; i++){
	        for(int j=0; j<playingField[i].length; j++){
	            System.out.print(playingField[i][j]+" ");
	        }
	        System.out.println();
	    }
	    

	}
	public static void playerGreeting(String playerName){
	    System.out.println("Hello,"+playerName+"! Let's start our sea battle!");
	}
}
